version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: trading_timescaledb
    environment:
      POSTGRES_DB: trading_db
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./docker/timescaledb/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - trading_network

  realtime_processor:
    build:
      context: ./layer2_realtime
      dockerfile: Dockerfile
    container_name: trading_realtime
    environment:
      - POSTGRES_HOST=timescaledb
      - POSTGRES_PORT=5432
      - POSTGRES_DB=trading_db
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=secure_password
    ports:
      - "8000:8000"
    depends_on:
      - timescaledb
    networks:
      - trading_network
    volumes:
      - ./data/models:/app/models
      - ./data/logs:/app/logs

  dashboard:
    build:
      context: ./layer3_visualization
      dockerfile: Dockerfile
    container_name: trading_dashboard
    environment:
      - POSTGRES_HOST=timescaledb
      - POSTGRES_PORT=5432
      - POSTGRES_DB=trading_db
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=secure_password
    ports:
      - "8050:8050"
    depends_on:
      - timescaledb
      - realtime_processor
    networks:
      - trading_network

  prometheus:
    image: prom/prometheus:latest
    container_name: trading_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - trading_network

  grafana:
    image: grafana/grafana:latest
    container_name: trading_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - trading_network

volumes:
  timescale_data:
  grafana_data:

networks:
  trading_network:
    driver: bridge
